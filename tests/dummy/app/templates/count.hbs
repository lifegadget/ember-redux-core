{{#markdown-convert style='github'}}
# Count Demo
> Showing simple state change through a numeric sub-section of state

## Introduction

Under the global state object, there is a state property called `state.count` which we will be manipulating in this demo through the following
Redux actions:

- `COUNT_ADD` - adds one to the current value
- `COUNT_SUBTRACT` - subtracts one from the current state value
- `COUNT_RESET` - resets the counter to a _zero_ value

If you want to follow along with the code:

- `/route/count.js` - very simple example since there is zero business logic tied to the action; had the complexity increased enough or if there was high reuse for this type of change cross-component then it would be more appropriately handled with the `count.hbs` template calling into an action-helper rather than the route.
- `/redux/reducers/count.js` - this reducer is responisible for all state under "count" in the state tree. This is a simple model so it just means it manages a number.
- `/redux/state-initializer/count.js` - because we wanted to sexy-up this demo we've added an initializer which ensures that state is maintained with a browser reload. It does this by managing state in localStorage.

> **Note**: if you have the [Redux debugger](https://github.com/zalmoxisus/redux-devtools-extension#usage) you can use this with this demo to both fire actions as well as monitor actions and state change

## Demo

{{/markdown-convert}}

<div class="demo">
  <div class="value">
    {{count}}
  </div>
  <div class="action-buttons">
    {{ui-button 'Add' onClick=(route-action 'add')}}
    {{ui-button 'Subtract' onClick=(route-action 'subtract')}}
    {{ui-button 'Reset' onClick=(route-action 'reset') mood='danger'}}
  </div>
</div>
